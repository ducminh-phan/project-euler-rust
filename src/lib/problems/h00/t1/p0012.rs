//! The sequence of triangle numbers is generated by adding the natural numbers.
//! So the 7th triangle number would be `1 + 2 + 3 + 4 + 5 + 6 + 7 = 28`. The
//! first ten terms would be:
//! ```text
//! 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
//! ```
//!
//! Let us list the factors of the first seven triangle numbers:
//!
//! ```text
//!  1: 1
//!  3: 1, 3
//!  6: 1, 2, 3, 6
//! 10: 1, 2, 5, 10
//! 15: 1, 3, 5, 15
//! 21: 1, 3, 7, 21
//! 28: 1, 2, 4, 7, 14, 28
//! ```
//!
//! We can see that 28 is the first triangle number to have over five divisors.
//!
//! What is the value of the first triangle number to have over five hundred divisors?

use itertools::Itertools;

use crate::numbers::factor;
use crate::primes::Primes;

pub fn solve() -> crate::Answer {
    let mut primes = Primes::new();

    let (result, n_factors): (u64, usize) = (1..)
        .map(|n| n * (n + 1) / 2)
        .map(|n| (n, factor(n, &mut primes)))
        .map(|(n, factors)| {
            (n, factors.iter().map(|(_, pow)| *pow + 1).collect_vec())
        })
        .map(|(n, powers)| (n, powers.iter().copied().product()))
        .find(|(_, p)| *p > 500)
        .unwrap();

    dbg!(n_factors);

    result.into()
}
