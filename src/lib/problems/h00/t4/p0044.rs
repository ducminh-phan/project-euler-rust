//! Pentagonal numbers are generated by the formula, `P_n = n * (3*n - 1)/2`.
//! The first ten pentagonal numbers are:
//!
//! ```text
//! 1, 5, 12, 22, 35, 51, 70, 92, 117, 145,...
//! ```
//!
//! It can be seen that `P_4 + P_7 = 22 + 70 = 92 = P_8`. However, their
//! difference, `70 - 22 = 48`, is not pentagonal.
//!
//! Find the pair of pentagonal numbers, `P_j` and `P_k`, for which their sum
//! and difference are pentagonal and `D = |P_k - P_j|` is minimised; what is
//! the value of `D`?

use crate::numbers::is_pentagonal_number;

pub fn solve() {
    // We iterate d = 0, 1,..., then find j such that P(j) + P(d) is a
    // pentagonal number. If there exists k such that P(j) + P(d) = P(k),
    // then we have P(j) + P(d) = P(k) >= P(j+1)
    // => P(d) >= P(j+1) - P(j) = 3 * j + 4
    // => we obtain an upper bound for j

    for d in 2.. {
        let p_d = d * (3 * d - 1) / 2;
        let max_j = (p_d - 4) / 3;

        for j in 1..=max_j {
            let p_j = j * (3 * j - 1) / 2;
            let p_k = p_j + p_d;

            if !is_pentagonal_number(p_k) {
                continue;
            }

            let p_s = p_j + p_k;
            if is_pentagonal_number(p_s) {
                println!("{}", p_d);
                return;
            }
        }
    }
}
